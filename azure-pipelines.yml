# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
#test

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: NodeTaskRunnerInstaller@0
  inputs:
    nodeVersion: '6'

#- task: CmdLine@2
#  displayName: 'install'
#  inputs:
#    script:  |
#     'sudo apt-get install npm'
#     'npm install'

#- task: CmdLine@2
#  displayName: 'Run Tests'
#  inputs:
#    script: |
#      set CI=true
#      npm run test

#- task: CmdLine@2
#  displayName: 'Build'
#  inputs:
#    script: |
#      'export NODE_OPTIONS=--openssl-legacy-provider'
#      'npm run build'

- script: |
   npm install
  displayName: 'Install Dependencies'

#- script: |
#   set CI=true
#   npm run test
#  displayName: 'Run Tests'

- script: |
   export NODE_OPTIONS=--openssl-legacy-provider
   npm run build
  displayName: 'Build the Project'
    
- task: CopyFiles@2
  displayName: 'Copy Files'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/build'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    
- task: ArchiveFiles@2
  displayName: 'Archive Files'
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: staticreactwebsite'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'staticreactwebsite'